knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
rawKaggle <- read_csv("https://raw.githubusercontent.com/betsyrosalen/DATA_607_Project_3/master/rawdata/multipleChoiceResponses.csv")
# Select only variables that seem most related to “Which are the most valued data science skills?”
# Filter for US Only
USOnly <- rawKaggle %>%
select(-c(15:35, 56, 58:71, 78, 206:228)) %>%
filter(Country=='United States')
glimpse(USOnly)
# Separate those employed in Data Science from those who are not.
# Filter for Employed only, TitleFit better than 'Poorly', and CodeWriters only
# Remove those that said they are "Employed by a company that doesn't perform advanced analytics"
employed <- USOnly %>%
filter(!grepl('Not employed',EmploymentStatus), TitleFit!="Poorly",
!grepl('Employed by a company that doesn\'t perform advanced analytics', CurrentEmployerType),
CodeWriter=="Yes")
# Filter for Data Science Learners who are not employed.
# The Survey failed to capture those who are employed and ALSO students or learners!!!
# Didn't bother to ask Employed respondents if they were also sudying Data Science.
learner <- USOnly %>%
filter(grepl('Not employed',EmploymentStatus),
grepl('Yes',LearningDataScience))
# Take a peek at the demographics of those who are employed...
employed %>%
group_by(CurrentJobTitleSelect) %>%
summarise(n())
# Need to Tidy this data so that each response is in a separate row rather than all in one
employed %>%
group_by(CurrentEmployerType) %>%
summarise(n())
# Take a peek at the demographics of those who are learners...
learner %>%
group_by(StudentStatus, LearningDataScience) %>%
summarise(n())
knitr::opts_chunk$set(echo = TRUE)
#Load dplyr and tidyr.
library(tidyr)
library(dplyr)
#Make a simple data frame to demonstrate the technique.
mydat <- data.frame(of3 = rep(NA,each=8),
of4 = rep(NA,each=8),
of6 = rep(NA,each=8),
stringsAsFactors=FALSE)
mydat
columns <- c("of3", "of4", "of6")
columns
#Select only column names in columns, plus the "Value" column.
#Then, convert to long format.
mydat_gathered <- mydat %>% select(c(columns)) %>% gather(Group.type,Group)
mydat_gathered
#Use this long format data to get values
mydat_gathered %>% group_by(Group.type,Group) %>% summarize(val = n())
#Can also do the wide to long and summarize all as one pipe.
mydat %>%
select(c(columns)) %>%
gather(Group.type,Group,-of6) %>%
group_by(Group.type,Group) %>%
summarize(val = n())
#Use this long format data to get values
mydat_gathered %>% group_by(Group.type,Group) %>% summarize(val = n())
#Can also do the wide to long and summarize all as one pipe.
mydat %>%
select(c(columns)) %>%
gather(Group.type,Group) %>%
group_by(Group.type,Group) %>%
summarize(val = n())
mydat %>%
group_by(of3) %>%
summarise(val = n())
my_func <- function(column, df){
df %>%
group_by_(column) %>%
summarise(val = n())
my_func(of6)
my_func <- function(column, df){
df %>%
group_by_(column) %>%
summarise(val = n())
}
my_func(of6)
my_func <- function(column, df){
df %>%
group_by_(column) %>%
summarise(val = n())
}
my_func(of6, mydat)
my_func <- function(column, df){
df %>%
group_by_(column) %>%
summarise(val = n())
}
my_func('of6', mydat)
my_func <- function(column, df){
df %>%
group_by_(column) %>%
summarise(val = n())
}
my_func(columns, mydat)
lapply(columns, my_func, mydat)
columns <- colnames(mydat)
columns
my_func <- function(column, df){
df %>%
group_by_(column) %>%
summarise(val = n())
}
lapply(columns, my_func, mydat)
my_func <- function(column, df){
df %>%
group_by_(column) %>%
summarise(val = n())
}
unlist(lapply(columns, my_func, mydat))
my_func <- function(column, df){
df %>%
group_by_(column) %>%
summarise(val = n())
}
lapply(columns, my_func, mydat)
unlist(lapply(columns, my_func, mydat))
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
x <- getURL("https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project2/DS2-Raffle%20Prizes.csv")
raffle <-data.frame(read.csv(text=x, header=FALSE, stringsAsFactors = FALSE))
library(tidyverse, quietly=TRUE)
dim(raffle)
glimpse(raffle)
head(raffle)
tail(raffle)
columns <- paste('V',c(3,5,7,8), sep="")
columns
lapply(columns, function(x,data){
data %>%
group_by(x) %>%
summarise(val = n())
},raffle)
columns <- paste('V',c(3,5,7,8), sep="")
columns
lapply(columns, function(x,data){
data %>%
group_by(x) %>%
summarise(val = n())
},
raffle)
columns <- paste('V',c(3,5,7,8), sep="")
columns
func <- function(x,data){
data %>%
group_by(x) %>%
summarise(val = n())
}
lapply(columns, func, raffle)
columns <- paste('V',c(3,5,7,8), sep="")
columns
func <- function(cols,data){
data %>%
group_by(cols) %>%
summarise(val = n())
}
lapply(columns, func, raffle)
columns <- paste('V',c(3,5,7,8), sep="")
columns
func <- function(columns,df){
df %>%
group_by(columns) %>%
summarise(val = n())
}
lapply(columns, func, raffle)
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
x <- getURL("https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project2/DS2-Raffle%20Prizes.csv")
raffle <-data.frame(read.csv(text=x, header=FALSE, stringsAsFactors = FALSE))
library(tidyverse, quietly=TRUE)
dim(raffle)
glimpse(raffle)
head(raffle)
tail(raffle)
columns <- paste('V',c(3,5,7,8), sep="")
columns
columns <- paste('V',c(3,5,7,8), sep="")
columns
func <- function(columns,df){
df %>%
group_by(columns) %>%
summarise(val = n())
}
lapply(columns, func, raffle)
columns <- paste('V',c(3,5,7,8), sep="")
columns
func <- function(columns,df){
df %>%
group_by(columns) %>%
summarise(val = n())
}
lapply(columns, my_func, raffle)
View(my_func)
columns <- paste('V',c(3,5,7,8), sep="")
columns
func <- function(column, df){
df %>%
group_by_(column) %>%
summarise(val = n())
}
lapply(columns, func, raffle)
columns <- paste('V',c(3,5,7,8), sep="")
columns
func <- function(columns,df){
df %>%
group_by(columns) %>%
summarise(val = n())
}
lapply(columns, func, raffle)
columns <- paste('V',c(3,5,7,8), sep="")
columns
func <- function(column, df){
df %>%
group_by_(column) %>%
summarise(val = n())
}
lapply(columns, func, raffle)
columns <- paste('V',c(3,5,7,8), sep="")
columns
func <- function(column, df){
df %>%
group_by_(column) %>%
summarise(val = n())
}
unlist(lapply(columns, func, raffle))
columns <- paste('V',c(3,5,7,8), sep="")
columns
func <- function(column, df){
df %>%
group_by(column) %>%
summarise(val = n())
}
unlist(lapply(columns, func, raffle))
?group_by_
devtools::install_github('hadley/ggplot2')
